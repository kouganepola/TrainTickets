/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package traintickets.userinterface.user;

import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import traintickets.core.DBExecution;
import static traintickets.userinterface.user.OverallStatSelection.codetxt;
import static traintickets.userinterface.user.OverallStatSelection.monthtxt;
import static traintickets.userinterface.user.OverallStatSelection.yeartxt;

/**
 *
 * @author koumudi
 */
public class OverallStatView extends javax.swing.JFrame {

    /**
     * Creates new form OverallStatView
     */
    public OverallStatView(JFrame parent, String statType, String year, String month, String station) {
        initComponents();
        
        this.parent = parent;
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        table_demo.setDefaultRenderer(String.class,centerRenderer );
        table_demo.setDefaultRenderer(Integer.class, centerRenderer);

        switch(statType){
            case "Monthly Overall":
                field3.setText("OVERALL STATISTICS - "+month+" "+year);  
                table_demo.getColumnModel().getColumn(0).setHeaderValue("Trainline");
                table_demo.repaint();
                System.out.println(statType);
                System.out.println(year);
                System.out.println(month);
                System.out.println(station);
                generateMonthlyOverallStat(Integer.parseInt(year), month);
                break;
            case "Annually Overall":
                field3.setText("OVERALL STATISTICS - YEARLY");
                generateAnnuallyOverallStat();
                break;
            case "Annually Station":
                 try {
                    ResultSet rs = DBExecution.getInstance().selectStationByStCode(station);

                    if (rs.next()) {
                        String name = rs.getString("stname");
                        field3.setText("OVERALL STATISTICS - "+name.toUpperCase());
                        generateAnnuallyStationStat(name);
                                
                    } else {
                        JOptionPane.showMessageDialog(null, "error!");
                        backButtonFunction();
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                    backButtonFunction();
                }
                break;                     
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        field3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_demo = new javax.swing.JTable();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setForeground(new java.awt.Color(0, 204, 204));

        field3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(51, 204, 255));

        table_demo.setAutoCreateRowSorter(true);
        table_demo.setBackground(new java.awt.Color(190, 212, 210));
        table_demo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 255)));
        table_demo.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        table_demo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Year", "Total Issued Tickets"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_demo.setToolTipText("");
        table_demo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        table_demo.setCellSelectionEnabled(true);
        table_demo.setEditingRow(1);
        table_demo.setGridColor(new java.awt.Color(255, 255, 255));
        table_demo.setMaximumSize(new java.awt.Dimension(2147483647, 1500));
        table_demo.setMinimumSize(new java.awt.Dimension(1000, 64));
        table_demo.setPreferredSize(new java.awt.Dimension(1400, 800));
        table_demo.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(table_demo);

        backButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        backButton.setText("Back");
        backButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        backButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                backButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(field3, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 141, 141)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 813, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backButton)
                            .addComponent(field3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        backButtonFunction();
    }//GEN-LAST:event_backButtonActionPerformed

    private void backButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_backButtonKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== java.awt.event.KeyEvent.VK_ENTER){
            backButtonFunction();

        }
    }//GEN-LAST:event_backButtonKeyPressed

    private void generateMonthlyOverallStat(Integer year, String month){
        try {
            ResultSet rs = DBExecution.getInstance().getAggregateTrainlineDataofMonth(year, month);
     
                System.out.println(year);
                System.out.println(month);
            DefaultTableModel model = (DefaultTableModel) table_demo.getModel();
            while (rs.next()) {

              model.addRow(new Object[]{ rs.getString("name").toUpperCase(),rs.getInt("total")+rs.getInt("booked")+ rs.getInt("returned")});
            } 

            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }
    
    private void generateAnnuallyOverallStat(){
        try {
            ResultSet rs = DBExecution.getInstance().getAnnualAggregateData();
            
            DefaultTableModel model = (DefaultTableModel) table_demo.getModel();
            while (rs.next()) {

              model.addRow(new Object[]{ rs.getString("year").toUpperCase(),rs.getInt("total")+rs.getInt("booked")+ rs.getInt("returned")});
        } 

            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    
    }
    private void generateAnnuallyStationStat(String station){
                        try {
            ResultSet rs = DBExecution.getInstance().getAnnualAggregateDataofStation(station);
            
            DefaultTableModel model = (DefaultTableModel) table_demo.getModel();
            while (rs.next()) {

              model.addRow(new Object[]{ rs.getString("year").toUpperCase(),rs.getInt("total")+rs.getInt("booked")+ rs.getInt("returned")});
            } 

            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void backButtonFunction(){
        parent.setVisible(true);
        dispose();
    }

    private JFrame parent;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel field3;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_demo;
    // End of variables declaration//GEN-END:variables
}
