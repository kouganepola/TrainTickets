/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package traintickets.userinterface;

import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.ActionMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.table.TableColumn;
import traintickets.core.DBExecution;
import traintickets.userinterface.components.ComboBoxRenderer;
import traintickets.userinterface.components.JSpinnerRenderer;
import traintickets.userinterface.components.JTableSpinnerEditor;

/**
 *
 * @author Sanduni Alwis
 */
public class StationDataForm extends javax.swing.JFrame {

    /**
     * Creates new form stationDemo
     * @param parent
     */
    public StationDataForm(Selection parent) {
        initComponents();
        visible = true;
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();

        setResizable(false);

        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        
        this.parent = parent;

        String year = new SimpleDateFormat("yyyy").format(parent.getYear());
        
        operationButton.setText(parent.getOperation());
        yearl_demo.setText(year);
        String month = parent.getMonth();
        monthl_demo.setText(month);

        try {
            String code = parent.getStation();
            ResultSet rs = DBExecution.getInstance().selectStationByStCode(code);

            if (rs.next()) {
                String name = rs.getString("stname");

                namel_demo.setText(name);
                fillColumns(name);
                
                if(parent.getOperation().equals("Update")){
                    fillData(Integer.parseInt(year), month, name);
                }
                                
            } else {
                JOptionPane.showMessageDialog(null, "error!");

            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        namel_demo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        operationButton = new javax.swing.JButton();
        clearTableButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        minusButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        yearl_demo = new javax.swing.JLabel();
        monthl_demo = new javax.swing.JLabel();
        returnedtkt_kni = new javax.swing.JSpinner();
        bookedtkt_kni = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        form_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1440, 490));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setMaximumSize(new java.awt.Dimension(1440, 590));
        jPanel1.setMinimumSize(new java.awt.Dimension(1440, 590));
        jPanel1.setPreferredSize(new java.awt.Dimension(1440, 490));

        namel_demo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel2.setText("BOOKED TKT");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel3.setText("RTN TKT");

        operationButton.setText("SUBMIT");
        operationButton.setMaximumSize(new java.awt.Dimension(89, 27));
        operationButton.setMinimumSize(new java.awt.Dimension(89, 27));
        operationButton.setPreferredSize(new java.awt.Dimension(89, 27));
        operationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operationButtonActionPerformed(evt);
            }
        });

        clearTableButton.setText("Clear Table");
        clearTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTableButtonActionPerformed(evt);
            }
        });
        clearTableButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                clearTableButtonKeyPressed(evt);
            }
        });

        backButton.setText("Back");
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.setMaximumSize(new java.awt.Dimension(89, 27));
        backButton.setMinimumSize(new java.awt.Dimension(89, 27));
        backButton.setPreferredSize(new java.awt.Dimension(89, 27));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        backButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                backButtonKeyPressed(evt);
            }
        });

        minusButton.setText("-");
        minusButton.setMaximumSize(new java.awt.Dimension(89, 27));
        minusButton.setMinimumSize(new java.awt.Dimension(89, 27));
        minusButton.setPreferredSize(new java.awt.Dimension(89, 27));
        minusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButtonActionPerformed(evt);
            }
        });

        addButton.setText("+");
        addButton.setMaximumSize(new java.awt.Dimension(89, 27));
        addButton.setMinimumSize(new java.awt.Dimension(89, 27));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        returnedtkt_kni.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        returnedtkt_kni.setMaximumSize(new java.awt.Dimension(49, 27));
        returnedtkt_kni.setMinimumSize(new java.awt.Dimension(49, 27));
        returnedtkt_kni.setPreferredSize(new java.awt.Dimension(49, 27));

        bookedtkt_kni.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        bookedtkt_kni.setMaximumSize(new java.awt.Dimension(49, 35));
        bookedtkt_kni.setMinimumSize(new java.awt.Dimension(49, 27));
        bookedtkt_kni.setPreferredSize(new java.awt.Dimension(49, 30));

        jScrollPane2.setBackground(new java.awt.Color(51, 204, 255));

        form_table.setAutoCreateRowSorter(true);
        form_table.setBackground(new java.awt.Color(0, 204, 204));
        form_table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 255)));
        form_table.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        form_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "1st Class", "2nd Class", "3rd Class A", "3rd Class B", "3rd Class C"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        form_table.setToolTipText("");
        form_table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        form_table.setCellSelectionEnabled(true);
        form_table.setEditingRow(1);
        form_table.setGridColor(new java.awt.Color(0, 102, 102));
        form_table.setMaximumSize(new java.awt.Dimension(2147483647, 1500));
        form_table.setMinimumSize(new java.awt.Dimension(1000, 64));
        form_table.setPreferredSize(new java.awt.Dimension(1400, 800));
        form_table.setSurrendersFocusOnKeystroke(true);
        jScrollPane2.setViewportView(form_table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(namel_demo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(45, 45, 45)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(yearl_demo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(returnedtkt_kni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bookedtkt_kni, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(236, 236, 236)))
                        .addComponent(monthl_demo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(clearTableButton, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(backButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(minusButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(operationButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1017, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(402, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(namel_demo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearl_demo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monthl_demo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(bookedtkt_kni, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(returnedtkt_kni, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearTableButton))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(minusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(operationButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fillColumns(String origin) {

        try {
            ResultSet rs = DBExecution.getInstance().selectAllActiveDestinationStations(origin);

            JComboBox combo = new JComboBox();
            while (rs.next()) {

                String stations = rs.getString("stname");
                combo.addItem(stations);

            }
       
            form_table.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(combo));
            form_table.getColumnModel().getColumn(0).setCellRenderer(new ComboBoxRenderer());
            
            int columnCount = form_table.getColumnCount();
            
            for(int column=1;column<columnCount;column++){
                
                
              form_table.getColumnModel().getColumn(column).setCellEditor(new JTableSpinnerEditor());
              form_table.getColumnModel().getColumn(column).setCellRenderer(new JSpinnerRenderer());
            }
               
            form_table.setRowHeight(20);
            
            ActionMap am = form_table.getActionMap();

            
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            System.out.println(e);
        }
    }
    
     private void fillData(Integer year, String month, String origin) {

        try {
                     
            ResultSet aggregateResultSet = DBExecution.getInstance().getAggregateStationDataofMonth(year, month, origin);
            
            if(aggregateResultSet.next()){
                bookedtkt_kni.setValue(aggregateResultSet.getInt("booked_tkt"));
                returnedtkt_kni.setValue(aggregateResultSet.getInt("returned_tkt"));

            }else{
                JOptionPane.showMessageDialog(this, "No records entered for station "+origin+" in "+year+" "+month);
                visible = false;
            }
            
            ResultSet resultSet = DBExecution.getInstance().getStationTicketDataofMonth(year, month, origin);
            DefaultTableModel model = (DefaultTableModel) form_table.getModel();
            
            while (resultSet.next()) {
          
                model.addRow(new Object[]{ resultSet.getString("to"),resultSet.getInt("1stCls"),resultSet.getInt("2ndCls"),resultSet.getInt("3rdClsA"),resultSet.getInt("3rdClsB"),resultSet.getInt("3rdClsC")});
            } 
                                    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            System.out.println(e);
        }
    }


    private void operationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operationButtonActionPerformed
        // TODO add your handling code here:
        if(operationButton.getText().equals("Submit")){
            submitData();
        }else if(operationButton.getText().equals("Update")){
             updateData();
        }
    }//GEN-LAST:event_operationButtonActionPerformed

    private void addRow() {
        DefaultTableModel dtm = (DefaultTableModel) form_table.getModel();
        dtm.setRowCount(dtm.getRowCount() + 1);
        for (int i = 1; i < 6; i++){
            dtm.setValueAt(0, dtm.getRowCount()-1, i);
        }
    }

    private void removeRow() {
        DefaultTableModel dtm = (DefaultTableModel) form_table.getModel();
        int selectedRow = form_table.getSelectedRow();
        if(selectedRow>=0){
            dtm.removeRow(selectedRow);
        }else{
            JOptionPane.showMessageDialog(this, "No row is selected to remove.");
        }
    }

    private void clearTable() {
        DefaultTableModel dtm = (DefaultTableModel) form_table.getModel();
        dtm.setRowCount(0);
    }


    private void clearTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTableButtonActionPerformed
        clearTable();
    }//GEN-LAST:event_clearTableButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        backButtonFunction();

    }//GEN-LAST:event_backButtonActionPerformed

    private void minusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButtonActionPerformed
        removeRow();
    }//GEN-LAST:event_minusButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        addRow();
    }//GEN-LAST:event_addButtonActionPerformed

    private void backButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_backButtonKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== java.awt.event.KeyEvent.VK_ENTER){ 
            backButtonFunction();
        }        
    }//GEN-LAST:event_backButtonKeyPressed

    private void clearTableButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clearTableButtonKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== java.awt.event.KeyEvent.VK_ENTER){ 
            clearTable();
        }  
    }//GEN-LAST:event_clearTableButtonKeyPressed
    
    private void backButtonFunction(){
        dispose();
        parent.setVisible(true);
    }
    
    public boolean getVisible(){
        return visible;
    }

    private void submitData(){      
        try {
            Integer year = Integer.parseInt(yearl_demo.getText());
            String month = monthl_demo.getText();
            String origin = namel_demo.getText();
            Integer bookedTkts = Integer.parseInt(bookedtkt_kni.getValue().toString());
            Integer returnedTkts = Integer.parseInt(returnedtkt_kni.getValue().toString());
             
            DBExecution.getInstance().insertStationTicketData(form_table, year, month, origin, bookedTkts, returnedTkts);
            
            JOptionPane.showMessageDialog(this, "successfull!");
            bookedtkt_kni.setValue(0);
            returnedtkt_kni.setValue(0);
            clearTable();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    private void updateData(){
        try {
            Integer year = Integer.parseInt(yearl_demo.getText());
            String month = monthl_demo.getText();
            String origin = namel_demo.getText();
            Integer bookedTkts = Integer.parseInt(bookedtkt_kni.getValue().toString());
            Integer returnedTkts = Integer.parseInt(returnedtkt_kni.getValue().toString());
            
            DBExecution.getInstance().updateStationTicketData(form_table, year, month, origin, bookedTkts, returnedTkts);
            
            JOptionPane.showMessageDialog(this, "successfull!");
            bookedtkt_kni.setValue(0);
            returnedtkt_kni.setValue(0);
            clearTable();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }        
    }
    
    private boolean visible;    
    private JFrame parent;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JSpinner bookedtkt_kni;
    private javax.swing.JButton clearTableButton;
    private javax.swing.JTable form_table;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton minusButton;
    private javax.swing.JLabel monthl_demo;
    private javax.swing.JLabel namel_demo;
    private javax.swing.JButton operationButton;
    private javax.swing.JSpinner returnedtkt_kni;
    private javax.swing.JLabel yearl_demo;
    // End of variables declaration//GEN-END:variables
}
